[
	{
		"Title": "What real life programs can you create in C?",
		"Body": "<p><span style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\">Well, the other answers to this question are mostly right- anything which you can program, you can do it in C.</span><br style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\"><br style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\"><span style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\">I will take a stab from another angle at this question!</span><br style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\"><br style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\"><span style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\">Since initially C++ was converted (using 'CFront') to C, I would consider C++ programs to be equally eligible as answers to this question.</span><br style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\"><br style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\"><span style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\">The following is a list of (some of the) programs I have created - in C and C++:</span><br style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\"></p><ul style=\"margin-right: 2em; margin-bottom: 1em; margin-left: 0px; padding: 0px; list-style-position: initial; list-style-image: initial; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\"><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(No name)&nbsp;<strong>A Payroll system-&nbsp;</strong>traditional batch driven, with reports on Dot Matrix, shifts, loans &amp; advances, salary register</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(SimFin)&nbsp;<strong>Financial Accounting -&nbsp;</strong>DOS based, GUI with mouse &amp; pop-ups, all accounting functions, in use today</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(Devyani, Deepika, ...., Dilkash)&nbsp;<strong>Desktop Publishing&nbsp;</strong>programs: DOS, GUI, mouse, WYSIWYG, Fonts in all Indian languages (Devanagari, Gujarati,...., Kannada, Urdu), complex lay-outing &amp; tabulations, Horizontal and Vertical justification, Graphics, Indian language text editor, Left-to-Right &amp; Right-to-left composing with kerning, in-built scripting, A4 to Broadsheet output on HP Laserjet &amp; PostScript printers with on-screen composing etc</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(No name)<strong>&nbsp;CNC program:&nbsp;</strong>DOS, GUI, 2D engraving on metal plates in English &amp; Indian languages, 3D shape making, I/O to GCode - lego style, Letters around a circle, Outlined letters, postscript shape engraving, Graphics in BMP/PCX</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(CART)&nbsp;<strong>Computerised Art</strong>work making: Windows, Two paned with graphics in one pane &amp; commands in another - both interchangeable &amp; yet linked, Toolbars for shapes etc</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(Devkey)&nbsp;<strong>Devanagari Keyboard:</strong>&nbsp;Windows based keyboard changer to use Indian language fonts in Windows programs such as PageMaker</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(COBOL2C)&nbsp;<strong>Cobol to C Converter:</strong>&nbsp;Lexx &amp; Yacc based, very fast, Cobol has huge grammar with multiple statement forms</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(Sanchay, Darshak)&nbsp;<strong>Digital Library Creation &amp; Display:</strong>&nbsp;Multi-user composing in Indian languages for single publication, floating keyboard, inbuilt scripting, PDF generation, Dictionaries and Shloka search system, display of compressed text from Sqlite databases in Indian languages with inbuilt searching, digital publications for distribution</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(Patholab)&nbsp;<strong>Pathological Lab Management:</strong>&nbsp;Cancer lab management, Disease &amp; symptom noting, billing &amp; management reports</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(Rupika)&nbsp;<strong>Beauty Parlour Management:</strong>&nbsp;For thousands of service types rendered by hundreds of operators, Scheduling, Inventory, Payroll, Time tracking etc. Primarily for Service Industries</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(ResPrint)&nbsp;<strong>Variable Printing System:</strong>&nbsp;For preparing PDF documents from database records en-masse, with auto sizing photographs and flexible record picking</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(DASTest)&nbsp;<strong>Depression, Anxity &amp; Stress Testing:</strong>&nbsp;Q/A based tests conducted with quick analysis and suggestion of remedies</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(BestTime)&nbsp;<strong>RFID Card Reader:&nbsp;</strong>8051, 16x2, Embedded systems with windows interface for setting disallowed/allowed users inside the box, setting of time/date &amp; other parameters</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(HotelPlus)&nbsp;<strong>Hotel Management System:</strong>&nbsp;Windows, Booking-Stay-billing, flexible charging methods, analysis</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(CpdCon)&nbsp;<strong>Cutter, Processor, Drier Controller:</strong>&nbsp;Duel microprocessor system for table-top Photo Developer and Printer (called 'Mini-Lab') with graphic LCDs, steppers, DC &amp; AC motors, level sensors, optical sensors, pump controllers, PC interface, multiple temperature sensors, heater controllers etc, including a task switching RTOS</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(HighLow)&nbsp;<strong>Portfolio Management and Advisor:&nbsp;</strong>Web based, real time stock quote scrapping, algorithm based buy-sell advising algorithm</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(SimPro)&nbsp;<strong>Simple Project Management:&nbsp;</strong>Web based, Kanban, charts, notes for each task</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">(FormCap)&nbsp;<strong>Document Management System:</strong>&nbsp;For millions of scanned documents, unlimited keys with unlimited length, access time less than 1 second</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px; position: relative;\">(ActiveMRP)&nbsp;<strong>Manufacturing Resource Planning System:</strong>&nbsp;Purchase, Inventory, Production, Sales, HR for manufacturing organisations, with user changeable items and groups, with in-built document management<br><br></li></ul><p><span style=\"color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\">Yes, I know that 'you' does not have to literally refer to the person answering the question. Well, these are the real-life examples for which I can certainly vouch as a creator. (I have not included several small programs.) These examples span Commercial, Systems, Embedded programming and use special hardware, thick client as well as web based front-ends.</span><br></p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\1.jpeg",
		"Created": "2020-05-08T13:36:16.3858587",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 23
	},
	{
		"Title": " If Python \"doesn't scale\", why is Quora built on it?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Every (decent modern) language&nbsp;<em>can</em>&nbsp;scale. The difference is in the architecture&nbsp;<em>encouraged</em>&nbsp;by the language, and the complexity of the resulting architecture.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Most of the Python frameworks I've seen are synchronous: A single interaction with a user has to complete before that thread can handle another user. This is true of many other server languages as well: PHP, Java, and Ruby all either encourage or require that behavior.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">So to scale vertically (i.e. in a single system) you need to run more threads. But OS threads are high overhead, and task switching will itself eat up much of the system performance.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Languages that encourage asynchronous development, meaning that they can switch between \"light\" tasks in a single OS thread, can scale vertically to handle far more connections on a single server. Languages that support this mode include JavaScript/NodeJS, Elixir/Erlang, Lua, and Go.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Note that the difference is only relevant for server tasks that aren't processor intensive. If your server is doing a machine learning calculation for every user, \"light\" threads will not buy you much, if anything.<br>&nbsp;<br>So while the short answer is that Python&nbsp;<em>can</em>&nbsp;scale, for many common workloads a Python backend will require far more horizontal scaling than one that supports \"light\" threads. I've seen Python workloads take literally 50x as many servers than an equivalent NodeJS backend would require, for instance.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">I spoke with a CTO who was spending more than $15k per month for hosting of their Python backend based on a workload that a few $20/month NodeJS servers would have handled without breaking a sweat. They've grown since then and cut their hosting costs drastically.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">But again, it depends a lot on what your server is doing. If the architecture is designed well, you can scale just about anything. The easiest way to scale a Python server might be to put it behind a NodeJS server as microservices, but there's always a way.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; margin-bottom: 0px !important; direction: ltr !important;\"><strong>EDIT</strong>: I just came across&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"http://magic.io/blog/uvloop-blazing-fast-python-networking/\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"magic.io\" data-tooltip=\"attached\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">uvloop: Blazing fast Python networking</a></span>, which brings fast asynchronous networking to Python. Using that, you could write Python that scales on the order of the other async languages I mentioned. But most Python doesn't use that approach, in my experience.</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\2.jpg",
		"Created": "2020-05-08T13:36:16.3858587",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 24
	},
	{
		"Title": "How useful of a programming language is Go?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Weirdly and surprisingly useful! I have been known to be critical of Go because of its lack of support for implementing generic data structures, but the truth is, you don’t need that&nbsp;<em>most</em>&nbsp;of the time. When you do need it, would be nice to know that there is a well tested third-party package that does supply what you need, but purpose built-data structures specifically for your usecase are nonetheless typically going to be faster–if you know what you’re doing.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">However, for a great majority of problems, which can be solved with dynamic arrays and hash maps (as we’ve learned from Perl, Python, Ruby, JavaScript and many others), Go is a gives you a lot of functionality and great performance in a really simple package.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">In a lot of ways, it even feels a bit like a so-called scripting language with the added benefit of static type checking and strict error handling. Programs are typically a little longer in Go than in a dynamically typed language, but they are still much shorter and simpler than programs in languages like Java while offering a similar level of reliability and performance. (perhaps I should qualify that its performance is similar to well-written Java, not the run-of-the-mill, over engineered crap that gives the language the reputation of being slow).</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; margin-bottom: 0px !important; direction: ltr !important;\">While I tend to personally prefer statically typed functional languages like OCaml and Haskell, I would still be happy to work with Go over many other languages.</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\3.jpeg",
		"Created": "2020-05-08T13:36:16.3858587",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 25
	},
	{
		"Title": "Why is Linux so unfriendly?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">As someone who has dabbled in Linux since the turn of the century, I can tell you that it was very unfriendly at one time, but isn’t today.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">The main reason people still perceive Linux as unfriendly is because most people have lived their whole life running Windows and/or some version of MacOS, and probably did so on prebuilt computers. All they did was sit down and go. After a while, you get used to the look and feel, and how it works. This is why Microsoft faced a near-revolt when they dramatically changed the desktop paradigm in Windows 8, and then had to backtrack.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">You can buy prebuilt PC’s running Linux, but that’s a niche market, and most people who use Linux are enthusiasts who have the technical knowledge to install their own OS. Most people have never even installed Windows themselves, let alone anything else.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">The first time I attempted Linux was around 2001, with the old Mandrake distro that was then considered the most user-friendly. I was able to get it installed and running, but it always had problems, even though there was nothing all that unusual about my hardware configuration. The problems were just serious enough to make Mandrake not very much fun to use. I’m sure that an experienced user could have fixed it, but I wasn’t one, and I really didn’t have the time in those days to devote to learning it myself. This was a recurring theme with me and Linux for several years.</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\4.jpg",
		"Created": "2020-05-08T13:36:16.3858587",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 26
	},
	{
		"Title": "What happened to Hadoop?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Hadoop went through the hype cycle that every other tech product goes through.</p><ol style=\"margin-right: 2em; margin-bottom: 1em; margin-left: 0px; padding: 0px; list-style-position: initial; list-style-image: initial; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\"><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">First it was an innovation - aka distributed map-reduce that allowed fault-tolerant storage and queries on big-data.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">Then the expectations went to an all-time high as it was touted as the replacement for many of the traditional RDBMS tools.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">Then the trough of disillusionment as projects started to fail to live up to expectations: primarily because a) Hadoop is not a stable eco-system and b) the skills needed to manage Hadoop (aka Java-based data administrators) are shorter in supply vs. SQL analysts.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px; position: relative;\">Other technologies have come to challenge Hadoop’s use-case - particularly Spark and other in-memory based storage for high-performance analytics and cloud-based SQL databases on AWS/Azure/GCP also provide the fault-tolerant distributed computation that everyone wanted at better prices.</li></ol><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Will it die? Maybe not. But it may continue to live on as a niche technology for specific purposes.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Funny enough, when Hadoop popularity was at an all time high, sometime circa 2016 I posted a humorous take on the google searches for Hadoop and predicted it would die around October 2018. That month was the date that Cloudera and Horton announced their merger. That was for me the bonafide sign that Hadoop commercial market was no longer sustainable.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Data sometimes is scary that way.</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\5.jpg",
		"Created": "2020-05-08T13:37:25.3099193",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 27
	},
	{
		"Title": "As a software engineer, what was the weirdest piece of code you ever saw?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">I spotted a whole subroutine that didn’t necessarily belong to a piece of Python that I was working on.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">At this point in upgrading the code, I was running diffs at every modification.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">No sooner than I removed the unnecessary code segment, something went screwy with the entire system.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Eventually I figured out that I was causing a seg fault and soft reboot of my QA systems.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Put the code back, and started injecting a lot of print statements with descriptions of what each section of code was doing.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">One of those sections of code, produced by the subroutine in question, were assembly lines.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">At this point, I’m comfortable enough with the code to understand that I know it’s not compiling and doing stuff on-the-fly, but this section of assembly was necessary. — Still doesn’t make sense. — At least the Python code wasn’t calling an on-the-fly compilation routine from what I could tell. I didn’t know how the system truly consumed the instructions shipped in the package my software was meant to produce.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">It was necessary to pass the assembly at that exact point in execution of a number of routines — byte-oriented read of the package produced by the routine. And the assembly was slowly pieced together by the Python subroutine itself. But it always came out the same — the exact same lines, no matter what I threw at it, in the exact same place, injected along the way before pushing the final piece of software to a publication server.&nbsp;<em>(Which my QA systems pulled, tried to load, and then choked on if I removed what I first thought was unnecessary overhead crap from poor/crappy development.)</em></p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">So, I upgraded the code and left it alone. Along the way, I fired off a few queries about what the deal was. — That there was something unknown, and screwing with it broke things, otherwise, that portion/segment of code was good to go for integration.</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\6.jpg",
		"Created": "2020-05-08T13:37:53.6544583",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 28
	},
	{
		"Title": "What's something really cool about software development that noobs usually don't know?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">A tad older than that baby and you can make such an app that will actually not simply count them but could, say, analyze your farts:<br><span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://www.cnet.com/news/theres-now-an-app-in-case-you-want-to-um-analyze-your-farts/\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"cnet.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">There's now an app in case you want to... um... analyze your farts</a></span></p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Anywho… the reason that software development seems to be so accessible especially at the present, is that nowadays software development is pretty much all about front end.<br>People say…. “I want to create an app that will be doing such and such”…<br>“ok, so I want a button here, and swiping there, and lets put the settings here”.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Even when they&nbsp;<em>think&nbsp;</em>that they are working on back end, they are most likely working still on a kind of front end.<br><span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://www.quora.com/What-is-new-in-the-programming-world/answer/Nick-Pappas-2?ch=10&amp;share=ea139993&amp;srid=n0gt\" style=\"background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173);\">This answer of mine about what is new in the programming world that somehow has gotten quite popular by stating the obvious… can explain better what I mean.</a></span></p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">You see, it turns out that we have created and keep creating so many tools that shield the user from the what the hell is going on behind the scenes (user here being a software developer) making it seem to them that software developing is something that looks like the top part of the picture below:</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Ignoring the reality of what is going on… which is depicted in the bottom part of the picture above.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">This is true of course for the users too. They usually see the top, unaware that beneath of it all there is a man eating baby zombies apocalypse taking place.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">This mass ignorance about software development, whether it is noob developers or end users, is pretty fascinating.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; margin-bottom: 0px !important; direction: ltr !important;\">The bottom part of the picture above by the way also explains why/when software engineers can make a lot of money. They make a lot of money not when they deal with the picture on the top… but when they have the skills to deal with the picture at the bottom.</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\7.jpg",
		"Created": "2020-05-08T13:38:28.084284",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 29
	},
	{
		"Title": "What is a software prepared from the C language?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">C is the most commonly used language for programming embedded systems, the others being assembly language (increasingly rare nowadays) and C++. The latter is typically used more for larger systems with microprocessors instead of a microcontroller.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; margin-bottom: 0px !important; direction: ltr !important;\">C is also used for programming systems software. The various versions of Linux are mostly written in C. The GNU compiler collection (gcc) is written largely in C, with parts in C++. The reference implementations of Python, Perl and PHP are all written in C.</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\1.jpeg",
		"Created": "2020-05-08T13:38:56.9850163",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 30
	},
	{
		"Title": "What are beginner apps that can help you learn programming?",
		"Body": "<ol style=\"margin-right: 2em; margin-bottom: 1em; margin-left: 0px; padding: 0px; list-style-position: initial; list-style-image: initial; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\"><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">Get yourself a notebook, pen, pencil, ruler and flowchart stencil set. These are better than any apps that will every be written.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">Get yourself a book or ebook on drawing flowcharts and truth tables.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">Get yourself a toolchain for your computer. This can be Java, Hugs88, GHC, UPC, GForth, Visual Basic, GCC or anything else that exists. It really makes no difference in the end.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">Get yourself a book or e-book on that language that contains examples. Get a second book that contains a complete list of commands and functions, if the first book doesn’t have it.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">Start with something simple. Writing “Hello, World!” is popular.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">Draw a flowchart that shows each action that the program needs to take. If any complex choices are involved, draw a truth table for each one.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">Flip through the examples to find out what you need to tell the computer that you’re writing a program and what it needs to do for each action in it. It’s a good idea to read the explanations and other verbiage, but as you get better, you’ll need less and less.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">If there are actions for which no example is helpful, use the reference book to find out what the commands are that you need and how they should be written. You should never have to do this step as a beginner.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">Test the program.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">If it doesn’t work, read more of the verbiage and look at more examples to see what you missed, then fix the program and go back to step 9.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\">Ok, it works, so make notes on what you had to do that you didn’t expect, what bugs you found, etc.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px; position: relative;\">Turn to a clean double page. This is an absolute rule in science and engineering. The first page is a bother, but you can’t help that. After that first project, everything you do should start on the top of the left page. Even if it wastes space. Clarity is essential, space isn’t. Even if there’s just one word on the last double page, it doesn’t matter. You will waste a lot less trees and a lot less time with this regimen than you will by trying to sort things out later. If you’re doing this at school, expect to get screamed at by staff - just remember that if they’d had better discipline and less lip, they’d not be screaming for a start. Extremely bad practice. They’d probably also know about proper science and engineering disciplines. Do not, however, tell them this. I seem to remember getting some bad reactions.</li></ol>",
		"ImageUrl": "\\img_seed\\forum\\programming\\2.jpg",
		"Created": "2020-05-08T13:39:42.986521",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 31
	},
	{
		"Title": "How can we add C++ to HTML?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">OQ:&nbsp;<strong>How can we add C++ to HTML?</strong></p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">You’re probably thinking of webassembly. The layman’s explanation: think of it as a compiled app running within the context of the HTML page. It’s a pretty exciting revolution as far as performance, security, stuff like that.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Webassembly can be built with&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://github.com/appcypher/awesome-wasm-langs#contents\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"github.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">any language</a></span>*; for C++, the library is Emscripten. It’s a little complex to learn, but if you already have some C++ skills, it should be straightforward to pick up.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Good luck!</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; margin-bottom: 0px !important; direction: ltr !important;\">*a reference link, not an ad for anything</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\3.jpeg",
		"Created": "2020-05-08T13:40:10.3547873",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 32
	},
	{
		"Title": " As a software engineer, developer, or programmer, what code made you think, \"you can't be serious…\"?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Thanks for the question, which offers such a great opportunity to rant.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Here you are with some of the ones I hate the most. I’m pretty sure I’ll get comments asking why.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\"><strong>The bastard exception eater</strong></p><pre class=\"prettyprint linenums prettyprinted\" style=\"font-family: monospace, monospace; font-size: 16px; margin-top: 1em; margin-bottom: 1em; background: rgb(250, 250, 250); overflow-wrap: normal; direction: ltr; color: rgb(51, 51, 51);\"><ol class=\"linenums\" style=\"margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none; counter-reset: prettyprintlinenumber 0; font-size: 13px;\"><li class=\"L0\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">catch</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"typ\" style=\"color: rgb(144, 32, 0);\">Exception</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> ex </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L1\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></li></ol></pre><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">That’s why I don’t believe in God. If (S)He existed, anyone daring to even think horrors like the above would be immediately incinerated.&nbsp;<code class=\"prettyprint inline prettyprinted\" style=\"font-family: Consolas, monaco, monospace; font-size: 1em; white-space: pre-wrap; margin: 1em 0px; background: rgb(250, 250, 250); overflow-wrap: break-word; overflow-x: auto; direction: ltr; display: inline; padding: 0px;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">ex</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">printStackTrace</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span></code>&nbsp;is slightly less obscene, but just slightly.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">EDIT (after long discussions in the comments): of course I’m talking of the many cases where this is utterly stupid. There are cases where it makes sense to catch, block and return a default value or behaviour. Maybe there are cases where it makes sense and it’s safe to do that without any kind of logging or reporting, but I can’t think of any.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\"><strong>It’s just an ID</strong></p><pre class=\"prettyprint linenums prettyprinted\" style=\"font-family: monospace, monospace; font-size: 16px; margin-top: 1em; margin-bottom: 1em; background: rgb(250, 250, 250); overflow-wrap: normal; direction: ltr; color: rgb(51, 51, 51);\"><ol class=\"linenums\" style=\"margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none; counter-reset: prettyprintlinenumber 0; font-size: 13px;\"><li class=\"L0\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// then x is used in 32768 methods and functions, </span></li><li class=\"L1\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// including unsynchronized multi-thread units.</span></li><li class=\"L2\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// yes, it's named x, and not a bloody comment to explain </span></li><li class=\"L3\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// what's for</span></li><li class=\"L4\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">public</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">var</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> x</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></li></ol></pre><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">What the…</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\"><strong>I’m too damn lazy to factorise</strong></p><pre class=\"prettyprint linenums prettyprinted\" style=\"font-family: monospace, monospace; font-size: 16px; margin-top: 1em; margin-bottom: 1em; background: rgb(250, 250, 250); overflow-wrap: normal; direction: ltr; color: rgb(51, 51, 51);\"><ol class=\"linenums\" style=\"margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none; counter-reset: prettyprintlinenumber 0; font-size: 13px;\"><li class=\"L0\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// At line 9789894893 of </span></li><li class=\"L1\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// src/some/damn/obscure/package/drowned/god/knows/where:</span></li><li class=\"L2\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// Change it with your local path:</span></li><li class=\"L3\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">filter</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">process</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">buffer</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">open</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"color: rgb(64, 112, 160);\">\"C:\\\\you\\\\even\\\\use\\\\the\\\\bloody\\\\windoz\\\\and\\\\the\\\\f_word\\\\back\\\\slashes\\\\data.xml\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)));</span></li></ol></pre><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Because they are too busy to introduce configurable values.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\"><strong>The dumb copycat</strong></p><pre class=\"prettyprint linenums prettyprinted\" style=\"font-family: monospace, monospace; font-size: 16px; margin-top: 1em; margin-bottom: 1em; background: rgb(250, 250, 250); overflow-wrap: normal; direction: ltr; color: rgb(51, 51, 51);\"><ol class=\"linenums\" style=\"margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none; counter-reset: prettyprintlinenumber 0; font-size: 13px;\"><li class=\"L0\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">if</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> value </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">==</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"str\" style=\"color: rgb(64, 112, 160);\">\"val 1\"</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L1\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;</span><span class=\"lit\" style=\"color: rgb(64, 112, 160);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">to</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(64, 112, 160);\">100</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> lines of code</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&gt;</span></li><li class=\"L2\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></li><li class=\"L3\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">else</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">if</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> value </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">==</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"str\" style=\"color: rgb(64, 112, 160);\">\"val 2\"</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L4\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">same </span><span class=\"lit\" style=\"color: rgb(64, 112, 160);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">to</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(64, 112, 160);\">100</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> lines of code</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> changed </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">in</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"lit\" style=\"color: rgb(64, 112, 160);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"color: rgb(64, 112, 160);\">2</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> tiny bits</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&gt;</span></li><li class=\"L5\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">...</span></li><li class=\"L6\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></li><li class=\"L7\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">else</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">if</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> value </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">==</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"str\" style=\"color: rgb(64, 112, 160);\">\"val 9999\"</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L8\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">  </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">...</span></li><li class=\"L9\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span></li><li class=\"L0\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">else</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L1\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">  </span><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// of course, you bastard don't bother about throwing</span></li><li class=\"L2\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">  </span><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// a bloody exception, do you?</span></li><li class=\"L3\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">  </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">print</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"str\" style=\"color: rgb(64, 112, 160);\">\"Wrong value\"</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span></li><li class=\"L4\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></li></ol></pre><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">When you have the opportunity to yell at them to rewrite that crap, don’t forget to also tell that you mean array or hash table to quickly lookup if value is valid and the variants to use if it is. If you forget this, they’ll come up with:</p><pre class=\"prettyprint linenums prettyprinted\" style=\"font-family: monospace, monospace; font-size: 16px; margin-top: 1em; margin-bottom: 1em; background: rgb(250, 250, 250); overflow-wrap: normal; direction: ltr; color: rgb(51, 51, 51);\"><ol class=\"linenums\" style=\"margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none; counter-reset: prettyprintlinenumber 0; font-size: 13px;\"><li class=\"L0\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">if</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> value </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">==</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"str\" style=\"color: rgb(64, 112, 160);\">\"val 1\"</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L1\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">  method </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"str\" style=\"color: rgb(64, 112, 160);\">\"val 1\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">value </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">set</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"lit\" style=\"color: rgb(64, 112, 160);\">1</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span></li><li class=\"L2\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></li><li class=\"L3\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">else</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">if</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> value </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">==</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"str\" style=\"color: rgb(64, 112, 160);\">\"val 2\"</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L4\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">  method </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"str\" style=\"color: rgb(64, 112, 160);\">\"val 2\"</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&lt;</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">value </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">set</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"lit\" style=\"color: rgb(64, 112, 160);\">2</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span></li><li class=\"L5\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">...</span></li></ol></pre><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">yes, with even the unnecessary curly brackets.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\"><strong>I’m still at school (or kindergarden?)</strong></p><pre class=\"prettyprint linenums prettyprinted\" style=\"font-family: monospace, monospace; font-size: 16px; margin-top: 1em; margin-bottom: 1em; background: rgb(250, 250, 250); overflow-wrap: normal; direction: ltr; color: rgb(51, 51, 51);\"><ol class=\"linenums\" style=\"margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none; counter-reset: prettyprintlinenumber 0; font-size: 13px;\"><li class=\"L0\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">out</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">println </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"str\" style=\"color: rgb(64, 112, 160);\">\"DEBUG value is:\"</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> value </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">);</span></li></ol></pre><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Hey, we’re in 2019AD, have you ever heard about logging?!</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">A variant is those scripts that insist on taking their input from or sending their output to a file parameter, never heard of standard in/out and redirection, you damn Windowdz fiddler?!</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\"><strong>For the damn record</strong></p><pre class=\"prettyprint linenums prettyprinted\" style=\"font-family: monospace, monospace; font-size: 16px; margin-top: 1em; margin-bottom: 1em; background: rgb(250, 250, 250); overflow-wrap: normal; direction: ltr; color: rgb(51, 51, 51);\"><ol class=\"linenums\" style=\"margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none; counter-reset: prettyprintlinenumber 0; font-size: 13px;\"><li class=\"L0\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// line 1 of some actual code</span></li><li class=\"L1\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// that was doing something</span></li><li class=\"L2\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// and maybe it will be needed again in future</span></li><li class=\"L3\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// but we don't know if this was commented yesterday</span></li><li class=\"L4\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// or 25 years ago</span></li><li class=\"L5\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// ...</span></li><li class=\"L6\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// line 1784939 of commented code</span></li><li class=\"L7\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">line </span><span class=\"lit\" style=\"color: rgb(64, 112, 160);\">1</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> of some real uncommented code that currently kind of works</span></li></ol></pre><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">It usually doesn’t come alone, you find more 87847 blocks that mix commented/uncommented rubbish in a single file, which contains most of the company assets.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">“Yes, there’s git, but commenting/uncommenting is quicker”…</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\"><strong>Sorry, my English grades were always bad</strong></p><pre class=\"prettyprint linenums prettyprinted\" style=\"font-family: monospace, monospace; font-size: 16px; margin-top: 1em; margin-bottom: 1em; background: rgb(250, 250, 250); overflow-wrap: normal; direction: ltr; color: rgb(51, 51, 51);\"><ol class=\"linenums\" style=\"margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none; counter-reset: prettyprintlinenumber 0; font-size: 13px;\"><li class=\"L0\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// This was translated by the Google, quindi forgive my</span></li><li class=\"L1\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// mierda English here. The problem are that we are there </span></li><li class=\"L2\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// so many violin players(*) which thought software engineering </span></li><li class=\"L3\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// is job that be can done in language not English</span></li><li class=\"L4\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">public</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> intriducibile</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">()</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"com\" style=\"color: rgb(96, 160, 176);\">// (**)</span></li></ol></pre><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">(*) Sorry, Google didn’t get I mean ‘fiddlers’ here.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">(**) Google couldn’t get that, cause the bastard doesn’t even master their mother language. Yes, they use their native language for code units too, not just comments or documentation.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\"><strong>Thanks, Mr Obvious</strong></p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">if ( &lt;obviouslyBooleanExpression&gt; == true ) ...</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Oh no, the absolute beginner who follow the textbooks blindly, not again…</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Bonus, five lines instead of one:</p><pre class=\"prettyprint linenums prettyprinted\" style=\"font-family: monospace, monospace; font-size: 16px; margin-top: 1em; margin-bottom: 1em; background: rgb(250, 250, 250); overflow-wrap: normal; direction: ltr; color: rgb(51, 51, 51);\"><ol class=\"linenums\" style=\"margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none; counter-reset: prettyprintlinenumber 0; font-size: 13px;\"><li class=\"L0\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">if</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"str\" style=\"color: rgb(64, 112, 160);\">&lt;obviouslyBooleanExpression&gt;</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">==</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">true</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L1\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">  </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">return</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">true</span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">;</span></li><li class=\"L2\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">else</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">{</span></li><li class=\"L3\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pln\" style=\"color: rgb(102, 102, 102);\">  </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">return</span><span class=\"pln\" style=\"color: rgb(102, 102, 102);\"> </span><span class=\"kwd\" style=\"color: rgb(0, 112, 32); font-weight: bold;\">false</span></li><li class=\"L4\" style=\"margin: 0px; padding: 0px 0px 0px 3em; color: rgb(148, 148, 148); counter-increment: prettyprintlinenumber 1; position: relative;\"><span class=\"pun\" style=\"color: rgb(102, 102, 0);\">}</span></li></ol></pre><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; margin-bottom: 0px !important; direction: ltr !important;\">Yes, with unnecessary curly brackets included.</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\4.jpg",
		"Created": "2020-05-08T13:40:59.7585465",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 33
	},
	{
		"Title": " Is there currently a backlash against object-oriented programming in the software development industry?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Yes, there is a backlash.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">It’s a very typical geek response to geeks’ own shortcomings: Rather than look into ourselves to see whether our thinking and presumptions should be brought into question, we seek something external, like technology, to blame.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Most line of business applications are essentially a means to get data back and forth from UIs to relational databases - irrespective of language paradigms. This isn’t necessarily a right or good way to think about (and thus design and code) applications, but it’s the lens that developers look out at the world through. It’s one of those biases that doesn’t get the rigorous inspection that it deserves.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">When the mind can’t get beyond data storage (or doesn’t even recognize the existence of this artifice) as the central thesis of application development, it will subvert all technologies to this end.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">OO technologies have been subverted to serve data storage. That’s the way that geeks see software development, and geeks - being geeks - are not able to recognize this bias in themselves.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">ORM is&nbsp;<strong>not</strong>&nbsp;OO. But most developers will have gravitated to data storage using objects (because they can’t help themselves), and thus we have ORM. But ORM is a pretty thorough violation of OO. Nonetheless, sooner or later we have to do data storage and retrieval.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">If we represent data in an OO language, we’re going to be representing the data with objects. But data is OO-with-an-asterisk. It’s the use of OO that has to violate OO (and other) design principles. Data objects are not supposed to be the center and core of an OO solution. They are the black sheep of the solution. We have to accept that data structures have to exist, and will exist, but we keep them isolated at arm’s length, and don’t let their negative influence to seep into the rest of the design.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Objects are&nbsp;<em>behavioral</em>. The are the&nbsp;<em>doers</em>&nbsp;of things, not the&nbsp;<em>representations</em>&nbsp;of things. When we allow our minds to focus almost exclusively on the task of marshaling data to-and-from storage, we subvert objects to the role of&nbsp;<em>representations</em>. And when that happens, we allow ourselves to abort the learning process that allows us to see what it means when it’s said:&nbsp;<em>Objects are behavioral</em>.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">When we use objects in the way that objects are intended, we end up with objects that&nbsp;<em>do</em>&nbsp;things, rather than&nbsp;<em>be</em>&nbsp;things. When our focus is on data - whether consciously or otherwise - we end up with a kind of OO that is far from exemplary of reasonable, good, and effective OO. In effect, when we allow out minds to be fixated on data rather than behavior, we end up with ORM, not OO (even though ORM is constructed of objects and object technologies).</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">I once heard the statement that, “Objects are just closures”. I think it was on Lambda the Ultimate that I first came across this statement. It’s an apt and accurate description. And it provides guardrails for using OO in a way that OO is effective.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">There&nbsp;<em>is</em>&nbsp;a backlash against OO because developers have failed frequently with OO. They’ve failed because they pumped the contents of their minds and their presumptions directly into a text editor without stopping to ever wonder whether they were going in a direction that is the diametric opposite of OO.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">There’s a backlash against OO because geeks are blaming the technology (again) rather than wondering whether it’s the shallowness of unquestioned assumption and presumption that’s at fault.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Objects are behavioral. Objects are principally the doers of things, not the data of things. Objects are closures.</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\5.jpg",
		"Created": "2020-05-08T13:41:31.6374759",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 34
	},
	{
		"Title": "How much does web application development cost?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Web application cost estimation is a thorny issue because clients instantly want to hear an accurate figure, and companies try to explain why it doesn't work like that. Both sides insist they are right. The cost of creating a web app is composed of the number of work hours put into it, multiplied by the hourly rate of your web development team. The number of work hours that your team will need to develop your app will mostly depend on its complexity. Developers in USA, Canada, the UK, and Australia can be hired to make a web app for $80-250/hour.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Eastern Europe, Middle East, and South America come second with $30-110 per hour. The cheaper option is to hire developers from Ukraine for $20-50 or India for $10-80 per hour.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">The oversimplified estimations of the three types of projects based on their complexity are given below.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\"><strong>Basic:</strong>&nbsp;Pages with static information and it can cost about $3K.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\"><strong>Medium Complexity:</strong>&nbsp;Pages with static information, few functional units, and API, third-party integration. it can cost from $10K.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; margin-bottom: 0px !important; direction: ltr !important;\"><strong>Complex:</strong>&nbsp;All from ‘Medium’, Multiple user roles, High user load and Custom statistics. It may cost about $25K.</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\6.jpg",
		"Created": "2020-05-08T13:41:59.6946621",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 35
	},
	{
		"Title": "How do programmers customise their Linux terminal?",
		"Body": "<p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Thanks for the A2A.</p><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">There are multiple, pretty much orthogonal ways to make your terminal experience better and more productive:</p><ul style=\"margin-right: 2em; margin-bottom: 1em; margin-left: 0px; padding: 0px; list-style-position: initial; list-style-image: initial; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif;\"><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\"><strong>Using an advanced terminal emulator.</strong>&nbsp;There are multiple good ones to choose from. Just to name a few:&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://wiki.gnome.org/Apps/Terminal\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"gnome.org\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">GNOME Terminal</a></span>,&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://www.kde.org/applications/system/konsole/\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"kde.org\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">Konsole</a></span>,&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://www.enlightenment.org/about-terminology\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"enlightenment.org\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">Terminology</a></span>,&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"http://worldwidemann.com/final-term-a-modern-terminal-emulator/\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"worldwidemann.com\" data-tooltip=\"attached\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">Final Term</a></span>&nbsp;(discontinued),&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://code.google.com/archive/p/jessies/wikis/Terminator.wiki\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"google.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">Terminator</a></span>&nbsp;and&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://github.com/gnunn1/terminix\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"github.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">Terminix</a></span>. For OS X there’s also&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://www.iterm2.com/\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"iterm2.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">iTerm2</a></span>.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\"><strong>Using a terminal multiplexer.</strong>&nbsp;Even though you may not need its multiplexing functionality since you already have tabs in the terminal emulator, there’s still a lot it can help with.&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://www.wikiwand.com/en/GNU_Screen\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"wikiwand.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">GNU Screen</a></span>&nbsp;and&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://www.wikiwand.com/en/Tmux\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"wikiwand.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">tmux</a></span>&nbsp;are the two popular ones.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\"><strong>Using an advanced shell.</strong>&nbsp;While most Linux distributions come with&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://www.wikiwand.com/en/Bash_(Unix_shell)\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"wikiwand.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">GNU bash</a></span>&nbsp;as the default shell (it’s GNU/Linux, after all), many professionals prefer other shells. The most known ones are&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://www.wikiwand.com/en/Z_shell\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"wikiwand.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">zsh</a></span>&nbsp;and&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://fishshell.com/\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"fishshell.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">fish</a></span>. Also, check out&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"http://xon.sh/\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"xon.sh\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">xonsh</a></span>&nbsp;if you like Python.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\"><strong>Making use of a plugin framework.</strong>&nbsp;zsh and fish come with&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"http://ohmyz.sh/\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"ohmyz.sh\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">oh-my-zsh</a></span>&nbsp;and&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://github.com/oh-my-fish/oh-my-fish\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"github.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">oh-my-fish</a></span>, respectively.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\"><strong>Using a custom prompt.</strong>&nbsp;oh-my-zsh and oh-my-fish already come with a prompt set up in an awesome way. Still you may want to look at&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://github.com/powerline/powerline\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"github.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">Powerline</a></span>&nbsp;and&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://github.com/arialdomartini/oh-my-git\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"github.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">oh-my-git</a></span>. The former provides beautiful and highly-functional prompts for bash, tmux, vim and IPython (among other things). The latter is a super-advanced prompt for working with git.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px 0px 0.7em; position: relative;\"><strong>Defining and using shell aliases and functions.</strong>&nbsp;Most shells, including bash, zsh and fish, let you define and use&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://www.digitalocean.com/community/tutorials/an-introduction-to-useful-bash-aliases-and-functions\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"digitalocean.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">aliases and functions</a></span>. Those help you workaround&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://xkcd.com/1168/\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"xkcd.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">this kind of situations</a></span>, and they also increase your speed by factoring out common command sequences.</li><li style=\"margin: 0px 0px 0px 2em; padding: 0px; position: relative;\"><strong>Using thefuck.</strong>&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://github.com/nvbn/thefuck\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"github.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">thefuck</a></span>&nbsp;is a powerful command correction tool. Its GitHub page describes it as “magnificent”, and I tend to agree. Seriously, check it out.</li></ul><p class=\"ui_qtext_para u-ltr u-text-align--start\" style=\"margin-right: 0px; margin-bottom: 1em; margin-left: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen-Sans, Ubuntu, Cantarell, &quot;Helvetica Neue&quot;, sans-serif; direction: ltr !important;\">Oh, and there is&nbsp;<strong>one more thing</strong>. It has always been a dream of mine to have a modern terminal emulator that would work more like an IDE, utilizing graphical capabilities of our hi-res screens for providing a richer environment, in particular, a much more powerful autocomplete. Well, it seems like my dream is coming true, and the project that is making it a reality is called&nbsp;<span class=\"qlink_container\" style=\"direction: ltr; unicode-bidi: isolate;\"><a href=\"https://github.com/shockone/black-screen\" rel=\"noopener nofollow\" target=\"_blank\" class=\"external_link\" data-qt-tooltip=\"github.com\" style=\"background-image: url(&quot;//qsf.fs.quoracdn.net/-3-images.new_grid.external_link.svg-26-7f84ed22dfd7e97b.svg&quot;); background-position: 100% 50%; background-size: 10.5px; background-repeat: no-repeat; background-attachment: initial; background-origin: initial; background-clip: initial; color: rgb(43, 109, 173); padding-right: 15px;\">Black Screen</a></span>. Maybe in the future we’ll have a decent terminal experience right out-of-the-box, without messing with lots of external tools.</p>",
		"ImageUrl": "\\img_seed\\forum\\programming\\7.jpg",
		"Created": "2020-05-08T13:42:48.9562208",
		"Modified": "0001-01-01T00:00:00",
		"ApplicationUserId": "aaaaaaaaaaaaaaaaaa",
		"CategoryId": 1,
		"Id": 36
	}
]